/*
  WebApp.ino - Arduino sketch implementing a Web application to control, monitor and configure iono

    Copyright (C) 2014-2015 Sfera Labs, a division of Home Systems Consulting S.p.A. - All rights reserved.

    For information, see the iono web site:
    http://www.iono.cc/
  
  This code is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.
  See file LICENSE.txt for further informations on licensing terms.
*/

#include <SPI.h>
#include <EEPROM.h>
#include <Ethernet.h>
#include <Iono.h>
#include <WebServer.h>
#include <IonoWeb.h>

byte mac[6];
byte ip[4];
byte dnsa[4];
byte gateway[4];
byte subnet[4];

char pwd[9];

void configCmd(WebServer &webServer, WebServer::ConnectionType type, char* urlTail, bool tailComplete) {

  webServer.httpSuccess();
  webServer.print("{");
  
  webServer.print("\"i\":\"");
  for (int i = 0; i < 4; i++) {
    if (i != 0) {
      webServer.print(".");
    }
    webServer.print(ip[i]);
  }
  
  webServer.print("\",\"d\":\"");
  for (int i = 0; i < 4; i++) {
    if (i != 0) {
      webServer.print(".");
    }
    webServer.print(dnsa[i]);
  }
  
  webServer.print("\",\"g\":\"");
  for (int i = 0; i < 4; i++) {
    if (i != 0) {
      webServer.print(".");
    }
    webServer.print(gateway[i]);
  }
  
  webServer.print("\",\"s\":\"");
  for (int i = 0; i < 4; i++) {
    if (i != 0) {
      webServer.print(".");
    }
    webServer.print(subnet[i]);
  }
  
  webServer.print("\",\"m\":\"");
  for (int i = 0; i < 6; i++) {
    if (i != 0) {
      webServer.print(":");
    }      
    char hex[3];
    hex[0] = (mac[i] >> 4) + 0x30;
    if (hex[0] > 0x39) hex[0] +=7;
    hex[1] = (mac[i] & 0x0f) + 0x30;
    if (hex[1] > 0x39) hex[1] +=7;
    hex[2] = '\0';
    webServer.print(hex);
  }

  webServer.print("\",\"p\":\"");
  webServer.print(pwd);

  webServer.print("\"}");
}

void webPageCmd(WebServer &webServer, WebServer::ConnectionType type, char* urlTail, bool tailComplete) {
  if (strlen(urlTail) == 0) { // serve page
    webServer.httpSuccess("text/html", "Content-Encoding: gzip\r\n");
    
    P(page1) = {0x1f, 0x8b, 0x08, 0x08, 0x06, 0xfc, 0xb8, 0x54, 0x00, 0x03, 0x69, 0x6f, 0x6e, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x2d, 0x6d, 0x69, 0x6e, 0x2e, 0x68, 0x74, 0x6d, 0x6c, 0x00, 0xd5, 0x5a, 0xf9, 0x77, 0xa2, 0xce, 0xb2, 0xff, 0x57, 0x18, 0xe6, 0x7b, 0xa3, 0x8c, 0x08, 0xb8, 0x1b, 0x09, 0xe6, 0x9a, 0x68, 0x12, 0xb3, 0x68, 0x56, 0x27, 0xcb, 0xe4, 0x9e, 0xd3, 0x40, 0x83, 0x44, 0x04, 0xc2, 0xe2, 0x3a, 0xfe, 0xef, 0xaf, 0xba, 0x41, 0x83, 0x26, 0x33, 0xf7, 0xbc, 0xdf, 0xde, 0xf3, 0x24, 0xb1, 0xa9, 0xae, 0xee, 0xae, 0xaa, 0xae, 0xfa, 0x54, 0x15, 0x33, 0x07, 0xc3, 0x70, 0x6c, 0x37, 0x0f, 0x86, 0x18, 0xe9, 0xcd, 0x83, 0x31, 0x0e, 0x11, 0x33, 0x0c, 0x43, 0x2f, 0x8f, 0xdf, 0x23, 0x6b, 0xa2, 0xb0, 0xd7, 0x3e, 0x32, 0xc7, 0x88, 0x65, 0x34, 0xd7, 0x09, 0xb1, 0x13, 0x2a, 0xac, 0xe3, 0xe6, 0x35, 0xa4, 0x0d, 0x31, 0xfb, 0x05, 0x73, 0x67, 0xe6, 0x59, 0x3e, 0x0e, 0x52, 0xdc, 0xf9, 0xc2, 0x9a, 0xcf, 0x41, 0x63, 0xac, 0xb0, 0x13, 0x0b, 0x4f, 0x3d, 0xd7, 0x0f, 0x53, 0x2c, 0x53, 0x4b, 0x0f, 0x87, 0x8a, 0x8e, 0x27, 0x96, 0x86, 0xf3, 0xf4, 0x81, 0x67, 0x2c, 0xc7, 0x0a, 0x2d, 0x64, 0xe7, 0x03, 0x0d, 0xd9, 0x58, 0x21, 0x7b, 0x84, 0x56, 0x68, 0xe3, 0xa6, 0xe5, 0x3a, 0xee, 0x81, 0x18, 0x8f, 0x0f, 0x82, 0x70, 0x0e, 0x5f, 0x3f, 0x96, 0xf9, 0x29, 0x56, 0x47, 0x56, 0x98, 0x8f, 0x02, 0xec, 0xe7, 0x03, 0x6c, 0x63, 0x2d, 0x6c, 0x38, 0xae, 0x83, 0xe5, 0xfc, 0x88, 0xa8, 0xf6, 0x05, 0x7d, 0xec, 0x2e, 0xb6, 0xa8, 0x94, 0x10, 0x4f, 0xb9, 0x9f, 0xd9, 0x77, 0x09, 0x2b, 0xcb, 0xf1, 0xa2, 0x90, 0x17, 0x82, 0x30, 0x60, 0x74, 0x6b, 0xf2, 0xe5, 0xf9, 0x21, 0x9e, 0x85, 0x5f, 0x9d, 0x1f, 0xd3, 0x77, 0xcf, 0x8f, 0xa9, 0xee, 0x67, 0xda, 0x2e, 0x61, 0xa5, 0xba, 0xfa, 0x7c, 0x49, 0x46, 0x79, 0x64, 0x5b, 0xa6, 0xd3, 0xd0, 0xc0, 0x84, 0xd8, 0x97, 0x0d, 0x30, 0x66, 0xa3, 0x50, 0xf5, 0x66, 0xcc, 0x10, 0xdb, 0x13, 0x1c, 0x5a, 0x1a, 0xe2, 0x91, 0x0f, 0x16, 0xe4, 0x03, 0xe4, 0x04, 0xb0, 0x83, 0x6f, 0x19, 0xf2, 0x18, 0xf9, 0xa6, 0xe5, 0x34, 0x24, 0xd9, 0x43, 0xba, 0x6e, 0x39, 0x26, 0x8c, 0x54, 0xa4, 0x8d, 0x4c, 0xdf, 0x8d, 0x1c, 0xbd, 0xf1, 0xbd, 0x54, 0xdd, 0x5f, 0x09, 0xf6, 0xd2, 0xb0, 0x5d, 0x14, 0x36, 0x6c, 0x6c, 0x84, 0x2b, 0xc1, 0x4f, 0x9e, 0x7c, 0xcb, 0x1c, 0xc2, 0x23, 0x5a, 0x7a, 0x6e, 0x00, 0x17, 0xe3, 0x3a, 0x0d, 0xa4, 0x06, 0xae, 0x1d, 0x85, 0x89, 0x2d, 0x36, 0x26, 0x40, 0x9e, 0x87, 0x91, 0x8f, 0x1c, 0x0d, 0x27, 0x96, 0x4e, 0xe8, 0x54, 0xe2, 0xc0, 0x5a, 0xe0, 0x3c, 0xd2, 0xdf, 0xa2, 0x20, 0x31, 0xec, 0x10, 0x93, 0x7d, 0x1b, 0xc5, 0x92, 0x37, 0x5b, 0x09, 0xc4, 0x1f, 0x96, 0xf4, 0xfa, 0x1b, 0x05, 0x49, 0xfa, 0xd7, 0x4a, 0xa0, 0xaa, 0xc6, 0x84, 0x62, 0x5d, 0xf2, 0x66, 0x1b, 0xf9, 0x19, 0x14, 0x85, 0x2e, 0xcc, 0x9b, 0x29, 0xf6, 0xf5, 0x5e, 0x74, 0xec, 0x4e, 0xb0, 0x0f, 0x82, 0x4f, 0x1b, 0x43, 0x4b, 0xd7, 0xb1, 0xb3, 0x12, 0x82, 0xa9, 0xb5, 0x4c, 0x56, 0x57, 0xc8, 0x59, 0xf0, 0x2c, 0x8c, 0x53, 0x14, 0xa6, 0x58, 0x4e, 0xc8, 0x4c, 0xac, 0xcf, 0x27, 0x3d, 0x93, 0xc3, 0xf3, 0xc4, 0x2e, 0x8d, 0xfc, 0x3e, 0x7c, 0x40, 0xa0, 0x89, 0x15, 0x58, 0xaa, 0x65, 0x5b, 0xe1, 0x3c, 0x7d, 0x12, 0x63, 0x23, 0x15, 0xdb, 0x4b, 0xdd, 0x0a, 0x3c, 0x1b, 0xcd, 0x1b, 0xaa, 0xed, 0x6a, 0x23, 0x79, 0xb3, 0xa1, 0x8f, 0x6d, 0x14, 0x5a, 0x13, 0x2c, 0xbb, 0x51, 0x68, 0x5b, 0x0e, 0x4e, 0x5d, 0x47, 0x11, 0xb6, 0x8c, 0x35, 0xaa, 0x12, 0x75, 0x13, 0x8d, 0x4a, 0x64, 0x9c, 0xbe, 0xa7, 0x7a, 0x7d, 0x5f, 0x56, 0x5d, 0x5f, 0x07, 0xcf, 0xf0, 0x91, 0x6e, 0x45, 0x41, 0xa3, 0xb0, 0x56, 0x2a, 0x3e, 0xba, 0xa1, 0x62, 0xc3, 0xf5, 0x31, 0x9f, 0xa2, 0x20, 0x03, 0xbc, 0xe4, 0x0b, 0xad, 0x92, 0x20, 0x6c, 0x64, 0x32, 0x9f, 0xd7, 0x2f, 0x43, 0xd7, 0xa3, 0x32, 0x51, 0x9d, 0xc9, 0x40, 0x75, 0xc3, 0xd0, 0x1d, 0xd3, 0xa1, 0x1f, 0xdf, 0xdc, 0x8e};
    webServer.writeP(page1, sizeof(page1));
    P(page2) = {0x68, 0x86, 0x61, 0xec, 0x8a, 0x56, 0xde, 0x16, 0x2d, 0x16, 0x24, 0x04, 0x17, 0x59, 0x8b, 0x62, 0xdb, 0x8c, 0x50, 0x0c, 0x64, 0x72, 0x58, 0x79, 0x7d, 0x58, 0xf9, 0xe3, 0xb0, 0xf2, 0xc6, 0x28, 0xc5, 0xea, 0xce, 0x69, 0xaa, 0xaa, 0x6a, 0x5a, 0xf9, 0x8f, 0x07, 0xd2, 0x9b, 0x6c, 0x00, 0x52, 0x69, 0x23, 0xac, 0xe7, 0xd2, 0xc7, 0xa7, 0xef, 0xf2, 0x93, 0x79, 0xab, 0x92, 0x56, 0xa8, 0x57, 0x57, 0x43, 0x9f, 0x57, 0xfd, 0xa5, 0x66, 0x83, 0x3b, 0x37, 0x40, 0x94, 0xe1, 0x4a, 0xc0, 0x3e, 0x3c, 0xbb, 0xb6, 0xeb, 0xc7, 0x7a, 0x26, 0xde, 0x43, 0xfc, 0x60, 0x7d, 0xd5, 0x14, 0x1c, 0x28, 0x2c, 0x08, 0xe1, 0x9a, 0xb5, 0x56, 0xab, 0xaf, 0x2f, 0x38, 0x9f, 0xa8, 0x14, 0xdf, 0x16, 0xe1, 0xc2, 0x89, 0x07, 0xd7, 0xca, 0x1b, 0x92, 0x95, 0x90, 0xca, 0x44, 0xae, 0x4f, 0x81, 0xbe, 0xda, 0x80, 0xce, 0x47, 0x98, 0xae, 0x7d, 0xa6, 0xbe, 0xbd, 0x20, 0x89, 0x59, 0x8a, 0x95, 0x6b, 0x8d, 0x89, 0x91, 0x4b, 0x1f, 0xa1, 0x94, 0x12, 0x68, 0x13, 0x8b, 0x54, 0x38, 0xba, 0x88, 0xb1, 0xc6, 0x66, 0xfa, 0x98, 0xb4, 0xd5, 0xf6, 0x6b, 0x84, 0xcd, 0x5b, 0x87, 0x50, 0x11, 0xf6, 0xa4, 0x51, 0xc9, 0xc4, 0xc1, 0xb9, 0x71, 0xe9, 0xc2, 0x8e, 0x75, 0x7d, 0x53, 0x45, 0xd9, 0x62, 0x59, 0xe2, 0xe9, 0x6f, 0x45, 0xe2, 0x25, 0xa1, 0xce, 0xed, 0xdc, 0x60, 0xe5, 0x93, 0x45, 0xbd, 0x24, 0x2a, 0x09, 0xca, 0x51, 0x14, 0xa1, 0xb7, 0x9c, 0x2c, 0x23, 0x4e, 0xc8, 0x80, 0x3b, 0x5b, 0x3a, 0xf3, 0x45, 0x68, 0x50, 0x68, 0x21, 0x71, 0xb6, 0xdc, 0x56, 0x39, 0xd6, 0x93, 0x4c, 0x24, 0xe1, 0x9a, 0x02, 0xba, 0x4f, 0x56, 0x5c, 0xdf, 0x35, 0x6c, 0xc6, 0x50, 0xb4, 0x20, 0xea, 0x4a, 0xc9, 0xf2, 0x44, 0xb4, 0xd4, 0xf2, 0x04, 0x95, 0x2a, 0x9b, 0x23, 0x84, 0xc0, 0x43, 0x3b, 0xe7, 0x97, 0x8a, 0x64, 0x52, 0x5d, 0x23, 0x5e, 0x6d, 0xd7, 0x0b, 0x31, 0x7c, 0x8c, 0x5a, 0x9a, 0x44, 0x36, 0x42, 0x7e, 0xde, 0x24, 0x8a, 0x81, 0x2f, 0x64, 0x89, 0x13, 0xf2, 0xdf, 0x01, 0x75, 0xd6, 0xf6, 0xa3, 0xc8, 0xc0, 0x14, 0xd6, 0xd6, 0xd8, 0x31, 0x04, 0x31, 0xd8, 0xfa, 0x56, 0x6a, 0xb1, 0x1e, 0xb2, 0x16, 0xf9, 0x01, 0xf8, 0xa8, 0x8e, 0x0d, 0x14, 0xd9, 0x21, 0x11, 0xa7, 0x31, 0x24, 0xd8, 0xb9, 0xdc, 0x89, 0x69, 0x3a, 0x83, 0x34, 0x02, 0x5b, 0x5b, 0x53, 0x70, 0x38, 0x99, 0x12, 0xb4, 0x44, 0x8b, 0x0a, 0x68, 0xb1, 0xfa, 0xae, 0xa9, 0xcb, 0xf4, 0xf5, 0xad, 0xa3, 0x57, 0x4a, 0x09, 0x50, 0x8c, 0x05, 0x20, 0xbc, 0x4d, 0xe2, 0xcc, 0x29, 0x96, 0x35, 0xea, 0xed, 0xd8, 0x83, 0x84, 0x51, 0x72, 0x0b, 0x65, 0x62, 0xfc, 0xdd, 0xa8, 0x27, 0xd6, 0x44, 0x6e, 0xda, 0xcf, 0x6b, 0x9f, 0xdc, 0x9c, 0x04, 0xd9, 0xf7, 0x56, 0xbf, 0xb0, 0x4e, 0x1b, 0x05, 0xe2, 0xc4, 0x34, 0xcb, 0x20, 0xc7, 0x1a, 0x23, 0x02, 0x47, 0x79, 0x52, 0xa5, 0x34, 0xb4, 0x39, 0xc4, 0xbd, 0xfc, 0x41, 0xd4, 0x23, 0x9f, 0x0e, 0x1a, 0x85, 0xa2, 0x14, 0xa4, 0xe9, 0x50, 0xec, 0x68, 0x09, 0x8a, 0x41, 0x70, 0x3a, 0x28, 0x4c, 0xaf, 0xb2, 0x80, 0x14, 0x8f, 0x34, 0xd0, 0x21, 0x6c, 0x58, 0x8e, 0x41, 0xca, 0x9a, 0x8f, 0xa4, 0xf8, 0xe5, 0xa9, 0x9f, 0x27, 0xb7, 0x4f, 0xff, 0x62, 0xfe, 0x0b, 0x29, 0x3e, 0x73, 0xfd, 0x49, 0x9a, 0xd5, 0xbf, 0x47, 0x78, 0x6e, 0xf8, 0x20, 0x40, 0xc0, 0x50, 0x09, 0x96, 0xd2, 0xbf, 0x52, 0x97, 0x9c, 0x4f, 0x60, 0x8c, 0x14, 0x07, 0xc5, 0x3f, 0xce, 0x54, 0x2a, 0x5f, 0xcd, 0x54, 0x6a, 0xe5, 0x4a, 0xbd, 0xb8, 0xaa, 0x7d, 0xb9, 0x8c, 0x4c, 0x55, 0x2b, 0xab, 0xfa, 0x97, 0x2b, 0xeb, 0xc5, 0x72, 0xa5, 0xa2, 0xae, 0x56, 0xff, 0x5e, 0xeb, 0xf1, 0x7f, 0x58, 0xc6, 0x03, 0x31, 0xae, 0x43, 0x0f, 0x02, 0xcd, 0xb7, 0xbc, 0xb0, 0x29, 0xfe, 0x38, 0xf8, 0xf6, 0x72, 0xdc, 0x6e, 0xdd, 0xb7, 0x5e, 0x7e, 0x88, 0x13, 0xe4, 0x33, 0xa1, 0xa5, 0xf3, 0xa1, 0xe5, 0xc1, 0x2f, 0xe6, 0x35, 0x93, 0xb7, 0x26, 0xbc, 0x36, 0xe1, 0x51, 0xc0, 0x1b, 0x9a, 0x22, 0xf1, 0xaa, 0xad, 0x7c, 0x2b, 0xf0, 0xb6, 0xe5, 0x29, 0x2c, 0xcb};
    webServer.writeP(page2, sizeof(page2));
    P(page3) = {0xcf, 0x0a, 0x8a, 0x83, 0xa7, 0xcc, 0x8c, 0x9f, 0x15, 0xd7, 0x83, 0x52, 0x3c, 0x90, 0x8d, 0xc8, 0xa1, 0x77, 0xcc, 0xcc, 0xb2, 0xdc, 0x92, 0xec, 0x8a, 0x94, 0x70, 0x68, 0x81, 0x33, 0x0a, 0x3e, 0xe5, 0x78, 0xbc, 0xba, 0x3c, 0x83, 0x42, 0xfc, 0x16, 0x0a, 0x71, 0x1c, 0x84, 0x84, 0x2c, 0xb8, 0x0e, 0x60, 0x92, 0xae, 0xac, 0x57, 0xc2, 0xba, 0xb2, 0xa2, 0x28, 0x64, 0xc6, 0x87, 0x52, 0x7f, 0x7e, 0x17, 0x82, 0xa3, 0xec, 0xed, 0x65, 0x8b, 0x92, 0x94, 0x90, 0x03, 0xa0, 0x44, 0xc1, 0x21, 0x12, 0xdc, 0x2c, 0xd7, 0x40, 0x02, 0xce, 0x72, 0xdc, 0x2a, 0xd9, 0x09, 0x72, 0x9f, 0xeb, 0xa7, 0xb7, 0xa2, 0xd3, 0xab, 0xd5, 0x46, 0xac, 0x7f, 0xb2, 0x88, 0x5b, 0xfa, 0x38, 0x8c, 0x7c, 0x87, 0xd1, 0x5d, 0x2d, 0x1a, 0x03, 0x44, 0x09, 0x26, 0x0e, 0x3b, 0x36, 0x26, 0xc3, 0xa3, 0x79, 0x57, 0x07, 0x8e, 0x0f, 0x7e, 0x3f, 0xc5, 0x7f, 0x85, 0xc2, 0xa1, 0x00, 0x00, 0xea, 0xfa, 0x59, 0x3a, 0x84, 0xe2, 0x40, 0x77, 0xc7, 0x59, 0xee, 0x47, 0x7a, 0x01, 0x2c, 0xe7, 0x35, 0x5e, 0xe5, 0x4d, 0x38, 0x5b, 0x51, 0xf3, 0x48, 0xd6, 0x14, 0x33, 0xaf, 0xc9, 0xe9, 0x2d, 0x82, 0x77, 0x3f, 0xcc, 0x6a, 0x3f, 0xb4, 0x1c, 0xda, 0x5a, 0x09, 0x6a, 0x01, 0x9d, 0x5b, 0xea, 0x7e, 0x96, 0x93, 0x63, 0xd3, 0x49, 0xbc, 0xa6, 0xb0, 0x19, 0xc6, 0xd2, 0x95, 0x4c, 0x97, 0x95, 0xc7, 0x30, 0x6e, 0xb2, 0x32, 0x74, 0x27, 0x07, 0x22, 0xa0, 0x11, 0x0c, 0x17, 0x30, 0x54, 0x7d, 0x18, 0x40, 0x1d, 0x94, 0x45, 0x4a, 0x41, 0xae, 0x35, 0x91, 0x8c, 0x72, 0x39, 0xee, 0x9f, 0x2c, 0x1b, 0x4c, 0x59, 0x4e, 0xb0, 0x1c, 0x30, 0xc9, 0xd9, 0xfd, 0xd5, 0x65, 0x0e, 0x38, 0x61, 0x0d, 0xa3, 0xd9, 0x28, 0x08, 0x94, 0x0c, 0x2d, 0x74, 0x18, 0x36, 0xc7, 0x32, 0xcc, 0x98, 0xfe, 0xb0, 0x2f, 0xe8, 0x35, 0x07, 0xdb, 0x1f, 0xd0, 0x34, 0x41, 0x4f, 0x6c, 0xf7, 0xd9, 0x1c, 0x02, 0x1a, 0x13, 0xce, 0x3d, 0xac, 0x64, 0x68, 0x81, 0xa2, 0xba, 0xb3, 0x0c, 0xe3, 0x3a, 0x9a, 0x6d, 0x69, 0x23, 0xd8, 0x05, 0x83, 0xbc, 0xb0, 0x86, 0x66, 0x26, 0x06, 0x64, 0xf8, 0x58, 0xd4, 0x3c, 0x10, 0x29, 0xb5, 0x19, 0x13, 0x70, 0x22, 0xa1, 0xb4, 0x91, 0x90, 0x3a, 0x87, 0xaa, 0xa0, 0x43, 0x96, 0x6d, 0xb0, 0x21, 0xcb, 0x9b, 0xdb, 0x02, 0xb2, 0x39, 0x35, 0xa7, 0x91, 0x9d, 0x04, 0x56, 0x26, 0xca, 0x84, 0xc1, 0x5f, 0xb4, 0xb1, 0x18, 0xc2, 0x3e, 0xce, 0x65, 0xd1, 0x21, 0x6a, 0xb0, 0x54, 0x03, 0x96, 0xcb, 0xe1, 0x9c, 0x99, 0x63, 0xdb, 0x6c, 0x4c, 0x67, 0x0f, 0xe1, 0x98, 0x36, 0xa5, 0x66, 0x2b, 0x4d, 0x74, 0x08, 0x53, 0x83, 0xf4, 0xd4, 0x80, 0x4e, 0x7d, 0x12, 0x21, 0x1b, 0xcb, 0xc7, 0x60, 0x98, 0x8e, 0xc5, 0xe9, 0xa6, 0x57, 0x75, 0x99, 0xec, 0xb8, 0xc5, 0x91, 0xa5, 0x0d, 0x16, 0xfe, 0x2e, 0x56, 0x6b, 0x2d, 0xab, 0x89, 0x96, 0xe4, 0xfa, 0xc0, 0xca, 0x96, 0x6e, 0x06, 0x63, 0x2f, 0xb1, 0x31, 0xcb, 0x83, 0x42, 0x9a, 0xf1, 0x17, 0x7d, 0x48, 0x0a, 0x65, 0x73, 0xd9, 0xf2, 0x01, 0x1c, 0xc3, 0x40, 0x4e, 0x66, 0xe9, 0xee, 0x63, 0x10, 0x6f, 0x73, 0x3b, 0x2c, 0x88, 0xc3, 0x26, 0xbd, 0x2a, 0x0c, 0x13, 0xde, 0xf8, 0xa6, 0x3c, 0xd8, 0x64, 0x0a, 0x69, 0x27, 0x13, 0xaf, 0x63, 0xd3, 0x17, 0x44, 0xd7, 0x35, 0x41, 0xa4, 0xee, 0x35, 0xd3, 0xee, 0xdd, 0x31, 0xa7, 0x10, 0x5c, 0x53, 0x34, 0x67, 0xee, 0x22, 0xd5, 0xc1, 0x21, 0x73, 0xd5, 0x3a, 0x66, 0xae, 0x93, 0xe5, 0x2c, 0x94, 0x03, 0xd0, 0x33, 0x64, 0x59, 0x86, 0xe5, 0xa8, 0xe4, 0x4c, 0x83, 0x59, 0xdf, 0x2a, 0x0b, 0xc6, 0x5a, 0xc8, 0x5f, 0xe8, 0xb1, 0xd8, 0xb6, 0xa1, 0x1a, 0x32, 0x76, 0xca, 0x61, 0x34, 0x83, 0xf8, 0x8b, 0x46, 0xfa, 0x2e, 0x9b, 0xdd, 0xb5, 0x37, 0xf0, 0xfa, 0x69, 0xe7, 0x42, 0x13, 0x4c, 0xb8, 0xc9, 0x77, 0x7c, 0x9c, 0xe7, 0xda, 0x76, 0xb6, 0x90, 0x8e, 0x35, 0x7f, 0x03, 0x32, 0x53, 0x0b, 0x62, 0x71, 0x1a, 0x4b, 0xf2, 0x93, 0xf6, 0xe6, 0xda, 0x16, 0xed, 0x8c, 0xa6, 0x6b, 0x5e, 0x55, 0x5e, 0x5e, 0xc1, 0xd5, 0x24, 0xde, 0xe0, 0x47, 0xbc};
    webServer.writeP(page3, sizeof(page3));
    P(page4) = {0xcd, 0x3b, 0xfc, 0x50, 0x0e, 0xfd, 0xf9, 0xd2, 0x32, 0xb2, 0x86, 0x42, 0xb4, 0x61, 0x39, 0x7e, 0xa8, 0x18, 0x04, 0x10, 0x8e, 0x49, 0xc7, 0x31, 0x03, 0xed, 0x8b, 0x3a, 0x10, 0x6d, 0x85, 0x05, 0x48, 0xc5, 0x90, 0x8a, 0xb0, 0xce, 0x7e, 0x53, 0x14, 0x62, 0x68, 0xd7, 0x60, 0x0c, 0x81, 0x62, 0xaa, 0xe0, 0x7a, 0x48, 0x83, 0xee, 0x8a, 0xdb, 0x79, 0x56, 0x24, 0xa1, 0xb4, 0xd2, 0x50, 0xa8, 0x0d, 0xb3, 0xde, 0x1a, 0x45, 0x56, 0x43, 0x01, 0xf4, 0x9f, 0xa0, 0x40, 0x88, 0xdf, 0x27, 0x20, 0x79, 0x43, 0x88, 0x4b, 0x0a, 0x45, 0xa3, 0xb1, 0x62, 0x28, 0xf9, 0x82, 0x6c, 0x1c, 0x28, 0x48, 0x04, 0xe0, 0x93, 0x0d, 0xf0, 0x25, 0x42, 0x1d, 0x11, 0xea, 0xe8, 0x40, 0xd1, 0x28, 0x75, 0x04, 0x54, 0x55, 0xf0, 0xa2, 0x60, 0x48, 0xd0, 0xf1, 0x87, 0x91, 0xf3, 0xc9, 0x37, 0xc7, 0x93, 0x87, 0x51, 0xf2, 0xc0, 0xf1, 0x66, 0x2e, 0x07, 0x67, 0x04, 0xa1, 0xef, 0x8e, 0xf0, 0x1d, 0x11, 0x4f, 0x01, 0x14, 0xb3, 0x6c, 0x3b, 0x1e, 0xdb, 0x87, 0x2c, 0x29, 0x9d, 0xc0, 0x55, 0xbe, 0xd7, 0x0a, 0xfb, 0x65, 0xb5, 0x1e, 0x83, 0x89, 0x03, 0x4e, 0xec, 0x1c, 0x98, 0xb2, 0x43, 0x42, 0xd5, 0x50, 0xd4, 0x97, 0xe2, 0x0f, 0xe7, 0x55, 0x1e, 0xc5, 0x83, 0x5c, 0xe1, 0x95, 0x32, 0xd9, 0x0a, 0x0c, 0x65, 0x1b, 0xd8, 0x6c, 0x60, 0x43, 0x74, 0xd2, 0x7e, 0x05, 0xcb, 0xd3, 0x01, 0x70, 0xf1, 0x43, 0x61, 0x0c, 0x85, 0xda, 0xbd, 0x9b, 0x05, 0x7b, 0x73, 0x7c, 0x59, 0x92, 0x9a, 0x3a, 0x19, 0xf2, 0x80, 0x91, 0xdc, 0xde, 0xde, 0x90, 0x56, 0x9d, 0x30, 0x4b, 0x1e, 0x37, 0x32, 0x66, 0xc9, 0x50, 0xc5, 0x50, 0x10, 0x5d, 0x03, 0x5a, 0xd2, 0x27, 0xe4, 0x6b, 0x74, 0x99, 0x9f, 0x2d, 0x48, 0x5c, 0xae, 0xcc, 0x43, 0x4d, 0xfe, 0x83, 0x42, 0xe9, 0x75, 0x97, 0xff, 0x56, 0x20, 0x1c, 0x44, 0x21, 0x02, 0xf4, 0xc9, 0x9d, 0xbb, 0x8e, 0x8f, 0x49, 0x01, 0x9e, 0x4e, 0x05, 0xb4, 0x47, 0xba, 0xb7, 0xc6, 0x18, 0x3a, 0xda, 0x2c, 0x24, 0x3b, 0x4e, 0x86, 0x3f, 0x0a, 0x60, 0xd8, 0x9a, 0xa6, 0xfb, 0x3c, 0xb4, 0xe5, 0x90, 0x4b, 0x36, 0x0e, 0x06, 0xe9, 0x24, 0x86, 0x73, 0x6e, 0x09, 0x59, 0x71, 0x6f, 0x6f, 0x67, 0x0b, 0x1c, 0xe3, 0xb4, 0x49, 0x5c, 0x07, 0x58, 0x59, 0x4e, 0x46, 0x90, 0xa8, 0x24, 0xf0, 0x0f, 0x15, 0xbe, 0x61, 0x3e, 0xbd, 0x3b, 0x30, 0xf0, 0xea, 0xa1, 0xda, 0xa8, 0x74, 0x4a, 0xe4, 0x52, 0x3e, 0x82, 0x46, 0xd1, 0x08, 0x6a, 0xd1, 0xcc, 0xc5, 0x64, 0x29, 0x7a, 0x02, 0xa2, 0xc8, 0x66, 0xe2, 0x4a, 0x49, 0x89, 0x4a, 0x80, 0x92, 0x76, 0xe8, 0x70, 0x51, 0xa4, 0x5a, 0x65, 0x53, 0x29, 0x0a, 0xbf, 0x53, 0x03, 0x12, 0x2f, 0xfe, 0xa6, 0xda, 0x6b, 0x64, 0x8d, 0x2d, 0xf1, 0xc2, 0xce, 0x60, 0xcb, 0x57, 0xc1, 0x97, 0x55, 0xf0, 0x4a, 0xec, 0x64, 0xd9, 0xd3, 0xce, 0x3d, 0xcb, 0x03, 0x08, 0xec, 0x01, 0xc2, 0x90, 0x8c, 0xdc, 0x06, 0x04, 0xe0, 0x88, 0xc7, 0x13, 0x41, 0xb3, 0x00, 0x17, 0x0a, 0xcb, 0x7f, 0x93, 0xa0, 0x58, 0x17, 0x02, 0xec, 0xe8, 0x59, 0x27, 0xb2, 0xed, 0x74, 0x02, 0x0d, 0xa0, 0x66, 0xcd, 0x12, 0x73, 0x78, 0x9f, 0xcc, 0xe1, 0xa5, 0x42, 0x93, 0xc6, 0x2a, 0xa4, 0xce, 0x98, 0x1d, 0x2c, 0xed, 0xa5, 0x6d, 0x91, 0xba, 0x15, 0x22, 0x7d, 0x01, 0xea, 0x8d, 0x43, 0x56, 0x44, 0x9e, 0x25, 0x92, 0xdc, 0x8e, 0x09, 0xb4, 0x8a, 0xd0, 0xf2, 0x1b, 0x16, 0x90, 0xb9, 0x15, 0x8f, 0x0e, 0x0b, 0x52, 0xa3, 0x00, 0x76, 0x4b, 0xed, 0x0f, 0x90, 0x01, 0xab, 0xc1, 0xf0, 0x1e, 0xc9, 0x73, 0x13, 0x64, 0x47, 0x58, 0x51, 0x34, 0x53, 0xf0, 0x0e, 0xb3, 0xd6, 0x44, 0xf9, 0x26, 0xf1, 0xd1, 0x24, 0xcb, 0xf1, 0xe4, 0x02, 0x39, 0x3e, 0x01, 0x0e, 0xae, 0x41, 0x1e, 0xd9, 0xa9, 0xef, 0x3a, 0x26, 0xb3, 0x06, 0x49, 0xaa, 0x6c, 0x4a, 0x3d, 0x8a, 0x3a, 0x09, 0xa8, 0xb0, 0xe2, 0x21, 0x4b, 0x6e, 0x9f, 0x3a, 0x7b, 0x48, 0x61, 0x1d, 0x9a, 0x2e, 0x12, 0x11, 0x80, 0xeb, 0x6b, 0x4c, 0x0f, 0x5f, 0x65, 0x15, 0x1c, 0x00, 0x1c, 0x18, 0xec, 0x5f, 0x69, 0x86, 0x87, 0xdf, 0xd4, 0x58, 0x9c, 0xdf};
    webServer.writeP(page4, sizeof(page4));
    P(page5) = {0xbf, 0xd7, 0x23, 0x61, 0x4c, 0x31, 0xa0, 0x04, 0x93, 0xe2, 0x2f, 0xfd, 0x97, 0x7e, 0x48, 0x7e, 0x84, 0xbf, 0x8d, 0xc4, 0x46, 0x99, 0x30, 0xff, 0x27, 0x9b, 0x2d, 0x14, 0xeb, 0xbf, 0x0b, 0xfb, 0xc5, 0xdf, 0xc5, 0x62, 0xf9, 0x37, 0x34, 0xa3, 0xf0, 0x5b, 0xff, 0x5d, 0xac, 0xc0, 0x73, 0xa5, 0xcc, 0xfd, 0x12, 0xa4, 0xf8, 0x87, 0xfb, 0x9d, 0x2d, 0x56, 0x2a, 0xbf, 0x84, 0x6c, 0x36, 0x2b, 0xfd, 0xfe, 0xef, 0x2b, 0xfe, 0x37, 0xec, 0xdc, 0xef, 0x98, 0xf5, 0xef, 0x8c, 0xe4, 0xf3, 0x8f, 0xd8, 0x00, 0x81, 0x5f, 0xa4, 0xfc, 0x3e, 0xca, 0x1b, 0xaf, 0xcb, 0x02, 0x5f, 0x5c, 0xbd, 0xfc, 0x12, 0x1a, 0xf9, 0x57, 0x6e, 0x59, 0x59, 0x6d, 0xd3, 0x81, 0xd7, 0xe2, 0x1a, 0x89, 0x75, 0x20, 0x54, 0x4a, 0xcd, 0xb5, 0xa5, 0x6c, 0xec, 0x98, 0xe1, 0xf0, 0x93, 0xe9, 0xc4, 0xff, 0xc4, 0xeb, 0x17, 0xaf, 0x39, 0xb2, 0x94, 0xe3, 0x92, 0x7a, 0x0a, 0xd9, 0x18, 0x6a, 0x26, 0xf6, 0x1a, 0x1c, 0x31, 0xc0, 0x0c, 0x7d, 0xf5, 0xc0, 0x20, 0x06, 0x56, 0x42, 0x97, 0x4d, 0x93, 0x9c, 0x0c, 0x49, 0x4e, 0x36, 0xe3, 0x24, 0x27, 0x07, 0x34, 0xc9, 0xc9, 0x24, 0xc9, 0x41, 0x83, 0x07, 0x08, 0x11, 0xc8, 0x6b, 0x37, 0x80, 0x44, 0x0e, 0x6d, 0xc6, 0x38, 0x1a, 0x33, 0x25, 0x46, 0x1b, 0x22, 0x1f, 0xba, 0x48, 0xec, 0x07, 0x3c, 0x63, 0xe3, 0x90, 0x0c, 0x18, 0x28, 0xf5, 0x18, 0xdd, 0x32, 0xad, 0x30, 0x80, 0x0c, 0x65, 0xcf, 0xb9, 0x4d, 0x72, 0x94, 0x21, 0x39, 0x86, 0xaf, 0x1c, 0xaf, 0x0a, 0x06, 0x94, 0x93, 0xe0, 0x93, 0x00, 0x48, 0x90, 0xfa, 0x15, 0x8d, 0x04, 0x52, 0x2e, 0xd1, 0x82, 0x44, 0xdb, 0x8a, 0x14, 0xcf, 0xe0, 0xaf, 0xd6, 0xda, 0x5d, 0x65, 0xe2, 0xfa, 0x45, 0x1e, 0x41, 0xa8, 0x41, 0x71, 0x2d, 0x7d, 0xf8, 0x20, 0xf1, 0xdc, 0x25, 0x71, 0xb9, 0xa4, 0x08, 0x94, 0xcb, 0x9b, 0xaa, 0xee, 0x85, 0xf5, 0x02, 0x96, 0x67, 0x35, 0x15, 0xfe, 0x4c, 0xa6, 0x64, 0x64, 0xb0, 0xaf, 0x90, 0x9c, 0xb9, 0x1d, 0xb4, 0x78, 0xb1, 0x26, 0x87, 0x31, 0x4e, 0x34, 0x12, 0xd8, 0xe0, 0x09, 0x65, 0x0b, 0x41, 0xa0, 0xbc, 0x07, 0x3b, 0x7f, 0x66, 0xd4, 0x26, 0x7b, 0x7b, 0x9f, 0x98, 0xc9, 0x21, 0xa9, 0x28, 0x81, 0xc2, 0x0f, 0x82, 0x9b, 0xa0, 0x1d, 0x0a, 0x88, 0x52, 0xd0, 0xad, 0xae, 0xd5, 0xe2, 0xb7, 0x1f, 0xa1, 0x5f, 0xe0, 0xe2, 0xcc, 0x1d, 0x83, 0x25, 0x44, 0x4e, 0x1c, 0xe8, 0x38, 0x3c, 0xfc, 0xa8, 0x5b, 0xab, 0x4d, 0x25, 0x29, 0x98, 0xa0, 0x14, 0x4a, 0x6a, 0x48, 0x30, 0x5f, 0x16, 0xf6, 0xa2, 0x4f, 0x9c, 0x90, 0xbc, 0x1f, 0x3b, 0x64, 0x0b, 0x20, 0x92, 0x44, 0xca, 0x9a, 0x3d, 0x96, 0x5a, 0xb0, 0x04, 0x60, 0x06, 0x52, 0x1c, 0x92, 0x43, 0x61, 0x09, 0x0a, 0x48, 0xd1, 0x93, 0x8a, 0x68, 0x52, 0x73, 0x2c, 0x35, 0x80, 0x04, 0x6d, 0x22, 0x13, 0xcb, 0xae, 0x66, 0x05, 0xc1, 0x4d, 0xe7, 0x05, 0xd2, 0xdf, 0xc4, 0xf5, 0x36, 0x89, 0x75, 0xe5, 0xfc, 0xae, 0xdf, 0x13, 0x3c, 0xe4, 0x07, 0x38, 0x0b, 0x9c, 0xa4, 0x09, 0x09, 0x3c, 0xd7, 0x09, 0xf0, 0x3d, 0x54, 0x03, 0x34, 0xc6, 0x35, 0x33, 0xbe, 0x1d, 0xc4, 0x58, 0x0e, 0xa3, 0x72, 0x40, 0x81, 0xc2, 0x12, 0x3a, 0x93, 0x17, 0xe9, 0x95, 0x23, 0xed, 0xc5, 0x5a, 0x54, 0x05, 0x44, 0x85, 0x4c, 0x00, 0x86, 0x93, 0xb1, 0x0d, 0xde, 0x49, 0xd6, 0x68, 0x74, 0x0d, 0xb9, 0x30, 0xe0, 0x24, 0xc5, 0x6d, 0x4e, 0x4b, 0x95, 0x4f, 0x94, 0xf9, 0x45, 0x7b, 0x4d, 0xec, 0xb5, 0x22, 0xcb, 0x96, 0x9a, 0xa9, 0xc4, 0x00, 0x94, 0x9c, 0x47, 0x8f, 0x88, 0x4d, 0x4b, 0xf7, 0x06, 0xb4, 0x83, 0x1a, 0xe0, 0xf0, 0x5b, 0xa1, 0xf1, 0x4d, 0xa2, 0x0a, 0x02, 0x65, 0x6f, 0x6f, 0x5d, 0x2b, 0xad, 0x64, 0x50, 0x02, 0x6f, 0xab, 0x0b, 0xf5, 0x40, 0xf1, 0xc0, 0xd0, 0xf6, 0xf6, 0x28, 0x1c, 0xce, 0x0a, 0x9b, 0x0b, 0x02, 0xe6, 0x62, 0xda, 0x36, 0x1f, 0xf8, 0xbd, 0xae, 0xf4, 0xb6, 0xbd, 0x2c, 0x76, 0x0d, 0x32, 0x39, 0x99, 0xfe, 0x65, 0x32, 0x98, 0x7c, 0x9e, 0x8c, 0x9d, 0x4b, 0x06, 0x2f, 0xe8, 0x92, 0xa0, 0x05, 0x7d, 0xd2, 0x49, 0x21, 0xc9, 0xe2, 0xc0};
    webServer.writeP(page5, sizeof(page5));
    P(page6) = {0x43, 0x5f, 0x05, 0x28, 0x2c, 0xf9, 0xc7, 0x9b, 0x86, 0x28, 0xb2, 0x39, 0x08, 0xa2, 0x15, 0x5f, 0x24, 0xa9, 0x80, 0xc8, 0xba, 0xa5, 0x58, 0xac, 0x4d, 0x91, 0x8d, 0xe3, 0xa9, 0xb0, 0x29, 0x17, 0xe5, 0x59, 0x69, 0xfb, 0xc2, 0xc1, 0x65, 0x59, 0x96, 0x92, 0x69, 0x82, 0x96, 0xc5, 0x1f, 0xaf, 0xaf, 0xcd, 0x1f, 0x22, 0x34, 0xc8, 0x71, 0x67, 0x7c, 0x20, 0xc6, 0xff, 0xc6, 0x44, 0x5e, 0xb9, 0x30, 0x49, 0x77, 0x9a, 0x49, 0xba, 0x33, 0x68, 0x6c, 0xd2, 0x25, 0xab, 0xc9, 0x20, 0xa0, 0xc4, 0xf5, 0x1b, 0x6d, 0x9a, 0x34, 0xd2, 0xf9, 0xc4, 0xcf, 0xcd, 0xb8, 0x4b, 0x4b, 0xf3, 0x93, 0xd7, 0xd8, 0x74, 0x45, 0x7a, 0x0f, 0x38, 0x25, 0xc3, 0xd0, 0xb7, 0x78, 0xc0, 0x40, 0x21, 0x6c, 0x9b, 0x81, 0xbe, 0xe4, 0x24, 0x9d, 0xd9, 0xd8, 0x64, 0x02, 0x5f, 0x53, 0x32, 0x3a, 0x0a, 0x51, 0xc3, 0x1a, 0x23, 0x13, 0x8b, 0x9e, 0x63, 0xca, 0x2a, 0x40, 0x5f, 0xb5, 0xcc, 0x5b, 0x83, 0xa3, 0xfe, 0xed, 0x54, 0xba, 0x38, 0x35, 0xdd, 0x16, 0x7c, 0x7a, 0x77, 0x0f, 0xc3, 0xce, 0x83, 0x09, 0xa3, 0x93, 0x2b, 0xf2, 0xfc, 0x74, 0xdc, 0x22, 0xdf, 0xc7, 0xb3, 0xfa, 0xe2, 0x54, 0x27, 0x04, 0xcb, 0x3e, 0xba, 0x1a, 0x74, 0x1e, 0x60, 0xd4, 0x16, 0xff, 0x1f, 0x7e, 0x8a, 0xbd, 0xa2, 0xd5, 0x23, 0x7a, 0x5c, 0x3e, 0xde, 0xde, 0xdd, 0xdb, 0x57, 0xad, 0xb9, 0xe1, 0xe7, 0x0a, 0x97, 0xb9, 0xe3, 0xe3, 0x1b, 0x71, 0x5a, 0xbd, 0x12, 0x25, 0xef, 0xec, 0xd9, 0xba, 0xee, 0x15, 0x2b, 0xea, 0x5b, 0xd7, 0x38, 0xf1, 0x4f, 0x72, 0x68, 0xa0, 0x5f, 0x9e, 0x4e, 0xaf, 0xdf, 0x8a, 0x57, 0x3f, 0x55, 0xfb, 0x0d, 0xdf, 0x3c, 0x8c, 0x5a, 0xfe, 0xbb, 0x1d, 0x9e, 0x5a, 0x16, 0xba, 0x0b, 0x4e, 0xa7, 0x33, 0x62, 0x1c, 0xb5, 0x63, 0x77, 0x6e, 0x06, 0x37, 0xe5, 0x79, 0x79, 0xf0, 0x50, 0xad, 0x5e, 0xcc, 0xbb, 0x47, 0xad, 0xce, 0xac, 0xdd, 0x9e, 0x8c, 0x6d, 0xbb, 0x72, 0xb7, 0x88, 0x06, 0x7a, 0x74, 0xb6, 0xff, 0x98, 0xdb, 0x7f, 0xbb, 0xbd, 0x29, 0x75, 0xb5, 0x5a, 0xad, 0xd2, 0x29, 0x2f, 0x2e, 0x83, 0x76, 0x54, 0x1b, 0xb6, 0xbd, 0x79, 0x65, 0x78, 0x82, 0x6e, 0x67, 0xd5, 0x71, 0x78, 0x71, 0xe6, 0x59, 0x4f, 0x76, 0xa1, 0x72, 0xf9, 0xf4, 0x54, 0x9e, 0x3d, 0xd7, 0x5a, 0x93, 0xe1, 0xcd, 0xfb, 0xb8, 0x23, 0x9e, 0x88, 0x1d, 0xef, 0x5a, 0x2d, 0x3f, 0x4e, 0x23, 0xa4, 0xa9, 0x85, 0xa7, 0x41, 0xad, 0x72, 0x7f, 0x3d, 0x3d, 0x72, 0x90, 0xd6, 0x2a, 0x8c, 0xfa, 0xc6, 0xf5, 0xfc, 0xb9, 0x5a, 0x3d, 0x3f, 0xb9, 0x2a, 0xbd, 0x59, 0xe3, 0xae, 0x8e, 0x8e, 0xbc, 0xe7, 0x59, 0xab, 0x74, 0x73, 0x1c, 0x9c, 0x5b, 0x83, 0xdc, 0xe3, 0x54, 0xb4, 0xf6, 0x7b, 0xb3, 0xfd, 0xab, 0x81, 0x6e, 0xee, 0x47, 0x4f, 0x5e, 0x30, 0x7c, 0xee, 0x55, 0x3a, 0x86, 0x77, 0xd4, 0x7a, 0xdc, 0xaf, 0x5d, 0x56, 0xed, 0xe0, 0x5e, 0x93, 0x5a, 0xe8, 0x3a, 0xba, 0x9a, 0x0f, 0x4f, 0xc3, 0xeb, 0x23, 0xbc, 0xd0, 0xcb, 0x8b, 0x7e, 0xbf, 0x26, 0x76, 0x16, 0xb3, 0xfe, 0x55, 0x5f, 0xd4, 0x2c, 0xe4, 0x4b, 0x0f, 0xda, 0x6d, 0xbd, 0xf3, 0xb3, 0xe0, 0x54, 0xaf, 0x8d, 0xa0, 0xf7, 0x84, 0xcf, 0x2f, 0x7b, 0x8b, 0x37, 0x74, 0x7f, 0x3e, 0x6c, 0xdd, 0xf5, 0xf7, 0xcd, 0xfe, 0xe9, 0x00, 0xbf, 0x3f, 0xf7, 0x2f, 0x6e, 0x66, 0xf7, 0x45, 0xa9, 0xed, 0x8c, 0x45, 0x51, 0x1f, 0x2d, 0xc4, 0xe9, 0xcf, 0x82, 0x3e, 0x0d, 0x66, 0x03, 0x43, 0x7a, 0x90, 0x02, 0xb7, 0x3b, 0x3c, 0x99, 0x16, 0x9d, 0xfe, 0xa0, 0xbf, 0x18, 0x2d, 0x7a, 0x27, 0x67, 0xef, 0xe6, 0x42, 0x6b, 0xf5, 0x3a, 0x66, 0x38, 0xa8, 0x9a, 0x97, 0x8f, 0xb5, 0x89, 0xd3, 0xaf, 0x9c, 0xcc, 0x4f, 0x8f, 0xa2, 0x72, 0xdb, 0xaf, 0x77, 0x8e, 0xd0, 0xf4, 0x5d, 0x2f, 0x96, 0x8f, 0xbd, 0x92, 0x74, 0x7a, 0xdb, 0xad, 0xe2, 0x91, 0x3d, 0xbe, 0xb1, 0xa2, 0x96, 0x7e, 0x31, 0x10, 0x3d, 0x3c, 0x05, 0x4f, 0xbf, 0x94, 0x4a, 0x6f, 0xb5, 0x51, 0x79, 0x7a, 0xb2, 0xb8, 0xf5, 0xee, 0xf1, 0xc9, 0x63, 0x19, 0x5b, 0xad, 0xb6, 0xdd, 0xeb, 0x55, 0x26, 0x4e, 0x34, 0xa9, 0xb8, 0xce, 0xec};
    webServer.writeP(page6, sizeof(page6));
    P(page7) = {0xf1, 0xca, 0x7f, 0x50, 0x7b, 0xe7, 0x83, 0xc5, 0x5d, 0xbb, 0xfa, 0xb3, 0x38, 0x6b, 0xd5, 0x9e, 0xc3, 0x71, 0x49, 0xf5, 0xc7, 0x8e, 0x71, 0xe4, 0x9c, 0x9e, 0xce, 0x66, 0x95, 0xca, 0xc9, 0xcf, 0xd0, 0x6f, 0x4b, 0xe6, 0x79, 0x74, 0xf9, 0x20, 0x9a, 0x6f, 0x5e, 0xcf, 0xd6, 0x6a, 0xb8, 0xef, 0x79, 0x75, 0xd7, 0xac, 0x8d, 0xcf, 0xf6, 0x27, 0xcf, 0xf5, 0xa3, 0xee, 0xac, 0x76, 0x3f, 0x6a, 0xdd, 0x9f, 0xb5, 0xdb, 0x06, 0x5e, 0x04, 0xb5, 0x01, 0x96, 0x4e, 0x4a, 0xe1, 0x4f, 0x0d, 0x57, 0x6f, 0x4b, 0x52, 0x84, 0xb5, 0xca, 0xd9, 0x79, 0x6f, 0x3c, 0x12, 0xa3, 0x52, 0xf4, 0x76, 0xf1, 0x74, 0x3d, 0xd5, 0x47, 0x7a, 0xc7, 0x6b, 0xdf, 0x2c, 0xb0, 0x8e, 0xec, 0xc5, 0xe0, 0xa4, 0x3d, 0xf3, 0xce, 0x9d, 0x2b, 0xdf, 0x9e, 0xd4, 0xaf, 0xda, 0x9e, 0x39, 0x51, 0x07, 0x4f, 0x39, 0xf5, 0xce, 0x38, 0x1d, 0xea, 0x47, 0xee, 0x53, 0x35, 0xca, 0xdd, 0x5e, 0x6a, 0x4f, 0xc6, 0xf9, 0x10, 0x7b, 0x17, 0x58, 0xbf, 0x30, 0x07, 0xd2, 0xfb, 0x08, 0xfd, 0x74, 0xc7, 0x68, 0xd1, 0xb9, 0x7d, 0xee, 0x56, 0x4c, 0x5f, 0x72, 0x4e, 0xdb, 0xc1, 0x79, 0x50, 0x39, 0x3b, 0x09, 0xce, 0x26, 0xc3, 0xb7, 0xe1, 0xb8, 0x13, 0x74, 0x8e, 0xdf, 0x8c, 0xee, 0xf9, 0xd0, 0x9a, 0x1e, 0xe1, 0x91, 0xdf, 0xbb, 0x55, 0xa7, 0xe5, 0xf6, 0xe4, 0xf9, 0xf9, 0x21, 0xe8, 0x16, 0x8e, 0xae, 0xc5, 0x23, 0xcf, 0xe8, 0x8e, 0x4f, 0xfd, 0xf7, 0xc5, 0xb9, 0x5d, 0x0b, 0xce, 0xa4, 0x61, 0x67, 0x71, 0x76, 0x23, 0x7a, 0x97, 0x5e, 0xe7, 0xee, 0x46, 0xed, 0x4d, 0xd4, 0x49, 0xfb, 0xe2, 0x32, 0xf2, 0x1e, 0xef, 0xdf, 0xc5, 0x76, 0xe7, 0xc6, 0xea, 0x87, 0xef, 0xc7, 0x6f, 0xa2, 0xea, 0x07, 0x6f, 0xfe, 0xbb, 0x39, 0x3c, 0x6d, 0xbf, 0xf7, 0x26, 0xc3, 0xa3, 0xc5, 0xcd, 0xf0, 0xad, 0xf0, 0x56, 0x7f, 0x42, 0xc7, 0x95, 0xde, 0xfc, 0x74, 0x72, 0x3f, 0x89, 0xfa, 0xbd, 0xd1, 0xdd, 0x75, 0x70, 0x11, 0x3d, 0xdc, 0xec, 0xef, 0x0f, 0xde, 0x9c, 0x0b, 0xa9, 0xe5, 0xe1, 0xc7, 0xab, 0x8b, 0xb3, 0xe9, 0xdb, 0x6d, 0x4d, 0xab, 0x44, 0x7e, 0xd4, 0x2d, 0x6b, 0x05, 0xdf, 0x6c, 0xf9, 0x77, 0x57, 0x16, 0xf2, 0xee, 0xfc, 0x9f, 0x93, 0xca, 0xf4, 0xa4, 0x52, 0xeb, 0x8b, 0xa7, 0x4e, 0xcd, 0x52, 0x8b, 0xc3, 0x52, 0xe1, 0xd8, 0xbe, 0x9b, 0xdd, 0xcc, 0x8e, 0xe6, 0x7d, 0xb0, 0xac, 0x31, 0x2a, 0x9d, 0x96, 0xdf, 0xc3, 0x1b, 0xed, 0xe8, 0xfe, 0xd9, 0xef, 0x44, 0xc5, 0x7b, 0xf7, 0x72, 0x61, 0xd6, 0x72, 0x95, 0xe9, 0x68, 0xff, 0xa4, 0x7d, 0xa5, 0x1a, 0xe5, 0xb3, 0xb2, 0x79, 0x52, 0xd5, 0xac, 0xf1, 0xed, 0x7e, 0x34, 0x25, 0x61, 0xd9, 0xba, 0x7b, 0x18, 0xf4, 0x6f, 0x2f, 0x2a, 0xc7, 0x4f, 0xdd, 0xae, 0x92, 0x00, 0x1a, 0x05, 0x48, 0x35, 0xf3, 0x87, 0x86, 0x3f, 0x7e, 0x39, 0x70, 0x40, 0x31, 0x73, 0x83, 0x9c, 0x5f, 0x0c, 0xc5, 0x6d, 0x32, 0xdd, 0x35, 0x98, 0x6c, 0x76, 0xf5, 0x32, 0x4d, 0xe6, 0x0e, 0x4d, 0x2c, 0xa8, 0xf1, 0xe3, 0x16, 0x22, 0x79, 0x2d, 0xcd, 0x33, 0x5e, 0x5c, 0x25, 0x4e, 0x91, 0x15, 0x0a, 0x82, 0xc0, 0xec, 0x6c, 0xe1, 0x05, 0xe9, 0x2d, 0x76, 0x5f, 0xc7, 0x6c, 0xbd, 0x19, 0xf3, 0xa6, 0x99, 0xf8, 0xd5, 0x0b, 0x1d, 0x8d, 0xd1, 0x2c, 0xae, 0x5a, 0x95, 0x4c, 0x3d, 0xb3, 0xfb, 0x0a, 0x06, 0xd4, 0x1b, 0xe1, 0xb9, 0x47, 0x6a, 0x4d, 0x25, 0x43, 0x3a, 0x34, 0x3c, 0x21, 0x6f, 0x1c, 0x81, 0x76, 0xec, 0xea, 0xd0, 0xb1, 0x14, 0x4a, 0x5c, 0xdc, 0xca, 0xac, 0xb6, 0xdf, 0xa3, 0xc1, 0xc6, 0xcd, 0xf5, 0x8b, 0x98, 0xd4, 0x7b, 0x97, 0x44, 0x66, 0xd5, 0x6f, 0xfe, 0xe5, 0xcd, 0x49, 0xbc, 0x61, 0xa6, 0xe9, 0x8e, 0x52, 0xec, 0xdb, 0xca, 0x6a, 0xc6, 0x96, 0xb2, 0xdb, 0x93, 0x93, 0x69, 0x6a, 0xf2, 0xcb, 0xcc, 0x44, 0x4d, 0x3e, 0xdd, 0x2c, 0x1c, 0xfa, 0x8c, 0x98, 0x9a, 0x08, 0x3f, 0x2c, 0x49, 0xc6, 0x9f, 0xb9, 0x92, 0x49, 0xe4, 0x32, 0xf6, 0xb6, 0xd6, 0x50, 0xc2, 0x65, 0x9a, 0xf0, 0x27, 0xad, 0xf1, 0x87, 0xd9, 0xc9, 0x6c, 0x62, 0x77, 0x3a, 0xfc, 0xef, 0xa6, 0x25, 0x75, 0x6a, 0x81, 0x98};
    webServer.writeP(page7, sizeof(page7));
    P(page8) = {0x76, 0xcf, 0x51, 0x03, 0x4f, 0x1e, 0x30, 0x9f, 0x53, 0x32, 0xd8, 0x4e, 0xdb, 0x7e, 0xef, 0x44, 0xd7, 0x64, 0x9a, 0xf0, 0xfd, 0x47, 0xf3, 0x41, 0xa9, 0xb1, 0x51, 0x11, 0xc6, 0x8c, 0x9f, 0xf9, 0xca, 0x39, 0x45, 0x92, 0xda, 0x49, 0x35, 0x41, 0xfe, 0xdf, 0xca, 0xff, 0x00, 0x34, 0x02, 0x16, 0x63, 0xbe, 0x22, 0x00, 0x00};
    webServer.writeP(page8, sizeof(page8));

  } else {
    if (tailComplete) {
      char name[8];
      char value[30];
      URLPARAM_RESULT rc;
  
      while (strlen(urlTail)) {
        rc = webServer.nextURLparam(&urlTail, name, 8, value, 30);
        if (rc == URLPARAM_EOS) {
          webServer.httpFail();
          return;
        }
  
        if (strcmp(name, "i") == 0) {
          setField(ip, value, '.', 10);
        } else if (strcmp(name, "d") == 0) {
          setField(dnsa, value, '.', 10);
        } else if (strcmp(name, "g") == 0) {
          setField(gateway, value, '.', 10);
        } else if (strcmp(name, "s") == 0) {
          setField(subnet, value, '.', 10);
        } else if (strcmp(name, "m") == 0) {
          setField(mac, value, ':', 16);
        } else if (strcmp(name, "p") == 0) {
          for (int i = 0; i < 9; i++) {
            pwd[i] = '\0';
          }
          strncpy(pwd, value, 8);
        }
      }
      
      byte checksum = 7;
      int a = 0;
      for (; a < 4; a++) {
        EEPROM.write(a, ip[a]);
        checksum ^= ip[a];
      }
      for (; a < 8; a++) {
        EEPROM.write(a, dnsa[a - 4]);
        checksum ^= dnsa[a - 4];
      }
      for (; a < 12; a++) {
        EEPROM.write(a, gateway[a - 8]);
        checksum ^= gateway[a - 8];
      }
      for (; a < 16; a++) {
        EEPROM.write(a, subnet[a - 12]);
        checksum ^= subnet[a - 12];
      }
      for (; a < 22; a++) {
        EEPROM.write(a, mac[a - 16]);
        checksum ^= mac[a - 16];
      }
      for (; a < 38; a+=2) {
        char c = pwd[(a - 22) / 2];
        byte l = c & 0xff;
        byte h = (c >> 8) & 0xff;
        EEPROM.write(a, l);
        EEPROM.write(a + 1, h);
        checksum ^= l;
        checksum ^= h;
      }
      EEPROM.write(a, checksum);
      
      webServer.httpSuccess();
      webServer.flushBuf();
      webServer.reset();
      
      delay(500);
      
      Ethernet.begin(mac, ip, dnsa, gateway, subnet);
      
    } else {
      webServer.httpFail();
    }
  }
}

void setField(byte *ip, char *value, char sep, int base) {
  int p = 0;
  int g = 0;
  for (int c = 0; c < 30; c++) {
    if (value[c] == sep || value[c] == '\0') {
      char n[4];
      int i = p;
      for (; i < c; i++) {
        n[i - p] = value[i];
      }
      n[i - p] = '\0';
      ip[g] = strtoul(n, NULL, base);
      if (value[c] == '\0') {
        break;
      }
      p = c + 1;
      g++;
    }
  }
}

void setup() {
  pinMode(0, INPUT);
  pinMode(1, OUTPUT);
  boolean reset = true;
  for (int i = 0; i < 5; i++) {
    digitalWrite(1, i % 2);
    if (digitalRead(0) != i % 2) {
      reset = false;
    }
  }

  if (!reset) {
    byte checksum = 7;
    int a = 0;
    for (; a < 4; a++) {
      ip[a] = EEPROM.read(a);
      checksum ^= ip[a];
    }
    for (; a < 8; a++) {
      dnsa[a - 4] = EEPROM.read(a);
      checksum ^= dnsa[a - 4];
    }
    for (; a < 12; a++) {
      gateway[a - 8] = EEPROM.read(a);
      checksum ^= gateway[a - 8];
    }
    for (; a < 16; a++) {
      subnet[a - 12] = EEPROM.read(a);
      checksum ^= subnet[a - 12];
    }
    for (; a < 22; a++) {
      mac[a - 16] = EEPROM.read(a);
      checksum ^= mac[a - 16];
    }
    for (; a < 38; a+=2) {
      byte l = EEPROM.read(a);
      byte h = EEPROM.read(a + 1);
      pwd[(a - 22) / 2] = (h << 8) + l;
      checksum ^= l;
      checksum ^= h;
    }
    
    if (EEPROM.read(a) != checksum) {
      reset = true;
    }
  }
  
  if (reset) {
    ip[0] = 192;
    ip[1] = 168;
    ip[2] = 0;
    ip[3] = 100;

    dnsa[0] = 192;
    dnsa[1] = 168;
    dnsa[2] = 0;
    dnsa[3] = 1;
    
    gateway[0] = 192;
    gateway[1] = 168;
    gateway[2] = 0;
    gateway[3] = 1;
    
    subnet[0] = 255;
    subnet[1] = 255;
    subnet[2] = 255;
    subnet[3] = 0;
    
    mac[0] = 0;
    mac[1] = 0;
    mac[2] = 0;
    mac[3] = 0;
    mac[4] = 0;
    mac[5] = 0;

    pwd[0] = '\0';
  }

  Ethernet.begin(mac, ip, dnsa, gateway, subnet);
  
  IonoWeb.begin(80);
  WebServer &webServer = IonoWeb.getWebServer();
  webServer.setDefaultCommand(&webPageCmd);
  webServer.addCommand("config", &configCmd);
}

void loop() {
  // Process incoming requests
  IonoWeb.processRequest();
  // Check all the inputs - needed for subscribe
  Iono.process();
}
